#!/bin/bash
#
# fdd-import-sync-files: a bash shell script to mirror the file
# system structure of a floppy diskette, CD-ROM or similar
# removable media into a repository on a stable medium. This will
# usually be called by a higher-level script, for example
# fdd-import. It uses rsync if that is available in the shell
# environment; if looks for the DOS/Windows xcopy utility if rsync
# is not available.
#
# @uses rsync|xcopy.exe
# @uses cmd.exe
# @uses cygpath
# @uses tr
#
# @param --srcdir=PATH mirror the files from the file system location at PATH
# @param --destdir=PATH mirror them to the file system location at PATH
# @param --cmd=NAME the name, if any, if the calling program (for example, fdd-import)
# @return int 0 if successful, non-zero error code if sync utility failed
#
# created: 29-May-2019 (extracted from fdd-import)
# revision: 29-May-2019

# loop through command line arguments looking for named or positional parameters
until [[ -z "$1" ]] ; do
	if [[ "$1" =~ ^-{0,2}([a-zA-Z_0-9][^=]*)\s*=\s*(.*)\s*$ ]] ; then
		KEY=$(echo "${BASH_REMATCH[1]}" | tr [:lower:] [:upper:])
		VALUE="${BASH_REMATCH[2]}"

		export "${KEY}"="${VALUE}"
	elif [[ -z "${DDIMG}" ]] ; then
		DDIMG="$1"
	elif [[ -z "${DEVDIR}" ]] ; then
		DEVDIR="$1"
	elif [[ -z "${CMD}" ]] ; then
		CMD="$1"
	fi
	shift
done

# if nobody else called us, then use our own slug in diagnostic messages
if [[ -z "${CMD}" ]] ; then
	CMD=`basename $0`
fi

EXITCODE=0

	echo "[${CMD}] \$ dd if=${DEVDIR} of=${DDIMG}"

	dd "if=${DEVDIR}" "of=${DDIMG}" || {
		EXITCODE=$?
		echo ""
		echo "[$CMD] WARNING: Possible error state during DD disk image dump." ;
	}

exit $EXITCODE

		